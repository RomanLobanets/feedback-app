{"version":3,"sources":["components/Statistic/Statistic.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistic/Statistic.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","statistic","statistic_list","statistic_list_item","FeedbackOptions","onClick","btn_container","btn","type","Section","title","children","Notification","message","notification","App","state","setState","prevState","countTotalFeedback","countpositiveFeedbackPercentega","Math","floor","funk","this","Statistic","Component","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"8FACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,eAAiB,kCAAkC,oBAAsB,yC,gBCApID,EAAOC,QAAU,CAAC,cAAgB,uCAAuC,IAAM,+B,qBCA/ED,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,aAAe,qC,sLCgBlBC,EAdI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,yBAAKC,UAAWC,IAAOC,WACrB,wBAAIF,UAAWC,IAAOE,gBACpB,wBAAIH,UAAWC,IAAOG,qBAAtB,SAAkDT,GAClD,wBAAIK,UAAWC,IAAOG,qBAAtB,YAAqDR,GACrD,wBAAII,UAAWC,IAAOG,qBAAtB,QAAiDP,GACjD,wBAAIG,UAAWC,IAAOG,qBAAtB,UAAmDN,GACnD,wBAAIE,UAAWC,IAAOG,qBAAtB,uBACuBL,EADvB,S,gBCcSM,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACtB,yBAAKN,UAAWC,IAAOM,eACrB,4BACEP,UAAWC,IAAOO,IAClBC,KAAK,SACLH,QAAS,kBAAMA,EAAQ,UAHzB,QAOA,4BACEN,UAAWC,IAAOO,IAClBC,KAAK,SACLH,QAAS,kBAAMA,EAAQ,aAHzB,WAOA,4BAAQN,UAAWC,IAAOO,IAAKC,KAAK,SAASH,QAAS,kBAAMA,EAAQ,SAApE,S,gBCVWI,EANC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,wBAAIZ,UAAWC,IAAOU,OAAQA,GAC7BC,I,gBCAUC,EAHM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,yBAAKd,UAAWC,IAAOc,cAAeD,ICGnBE,G,kNAGnBC,MAAQ,CACNtB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAOPS,QAAU,SAAAG,GACR,EAAKS,UAAS,SAAAC,GACZ,OAAO,eACJV,EAAOU,EAAUV,GAAQ,O,EAUhCW,mBAAqB,WAEnB,OADc,EAAKH,MAAMtB,KAAO,EAAKsB,MAAMrB,QAAU,EAAKqB,MAAMpB,K,EAGlEwB,gCAAkC,WAChC,OAAOC,KAAKC,MAAyB,IAAlB,EAAKN,MAAMtB,KAAc,EAAKyB,uB,uDAIjD,IAAII,EAcJ,OAZEA,EADEC,KAAKL,qBAAuB,EAE5B,kBAACM,EAAD,CACE/B,KAAM8B,KAAKR,MAAMtB,KACjBC,QAAS6B,KAAKR,MAAMrB,QACpBC,IAAK4B,KAAKR,MAAMpB,IAChBC,MAAO2B,KAAKL,qBACZrB,mBAAoB0B,KAAKJ,oCAItB,kBAAC,EAAD,CAAcP,QAAQ,sBAG7B,yBAAKd,UAAU,gBACb,kBAAC,EAAD,CAASW,MAAM,yBACb,kBAAC,EAAD,CAAiBL,QAASmB,KAAKnB,WAEjC,kBAAC,EAAD,CAASK,MAAM,aAAaa,Q,GAtDHG,cAAZX,EACZY,aAAe,GCJxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.82f09fb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"Statistic_statistic__3EBUI\",\"statistic_list\":\"Statistic_statistic_list__B3fZj\",\"statistic_list_item\":\"Statistic_statistic_list_item__jXDx2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn_container\":\"FeedbackOptions_btn_container__3b57J\",\"btn\":\"FeedbackOptions_btn__1rp9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1C7Ma\"};","import React from 'react';\nimport styles from './Statistic.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className={styles.statistic}>\n    <ul className={styles.statistic_list}>\n      <li className={styles.statistic_list_item}>good: {good}</li>\n      <li className={styles.statistic_list_item}>neutral: {neutral}</li>\n      <li className={styles.statistic_list_item}>bad: {bad}</li>\n      <li className={styles.statistic_list_item}>Total: {total}</li>\n      <li className={styles.statistic_list_item}>\n        Positive feeedback: {positivePercentage} %\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Statistics;\n","import React from 'react';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ onClick }) => (\n  <div className={styles.btn_container}>\n    <button\n      className={styles.btn}\n      type=\"button\"\n      onClick={() => onClick('good')}\n    >\n      good\n    </button>\n    <button\n      className={styles.btn}\n      type=\"button\"\n      onClick={() => onClick('neutral')}\n    >\n      neutral\n    </button>\n    <button className={styles.btn} type=\"button\" onClick={() => onClick('bad')}>\n      bad\n    </button>\n  </div>\n);\nexport default FeedbackOptions;\n","import React from 'react';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <>\n    <h1 className={styles.title}>{title}</h1>\n    {children}\n  </>\n);\nexport default Section;\n","import React from 'react';\nimport styles from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <div className={styles.notification}>{message}</div>\n);\nexport default Notification;\n","import React, { Component } from 'react';\nimport Statistics from '../Statistic/Statistic.js';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions.js';\nimport Section from '../Section/Section.js';\nimport Notification from '../Notification/Notification.js';\nimport './App.module.css';\n\nexport default class App extends Component {\n  static defaultProps = {};\n  static propTypes = {};\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  // onGood = () => {\n  //   this.setState(prevState => {\n  //     return prevState.good + 1;\n  //   });\n  // };\n  onClick = type => {\n    this.setState(prevState => {\n      return {\n        [type]: prevState[type] + 1,\n      };\n    });\n  };\n  // this.setState(prevState => {\n  //   return {\n  //     [type]: prevState.[type] + 1,\n  //   };\n  // });\n\n  countTotalFeedback = () => {\n    const total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  };\n  countpositiveFeedbackPercentega = () => {\n    return Math.floor((this.state.good * 100) / this.countTotalFeedback());\n  };\n\n  render() {\n    let funk;\n    if (this.countTotalFeedback() > 0) {\n      funk = (\n        <Statistics\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n          total={this.countTotalFeedback()}\n          positivePercentage={this.countpositiveFeedbackPercentega()}\n        />\n      );\n    } else {\n      funk = <Notification message=\"No feedback given\" />;\n    }\n    return (\n      <div className=\"feedbackForm\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onClick={this.onClick} />\n        </Section>\n        <Section title=\"Statictic\">{funk}</Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}